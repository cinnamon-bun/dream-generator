declare type Rng = any;
import { FExpr } from './filigreeGrammar';
export declare type WrapperFn = (rule: string, text: string) => string;
export declare class Filigree {
    rules: {
        [name: string]: FExpr;
    };
    err: Error | null;
    modifiers: {
        [name: string]: (input: string) => string;
    };
    rng: Rng;
    constructor(source: string, seed?: string);
    seed(seed?: string): void;
    ruleNames(): string[];
    refsInRule(ruleName: string): string[];
    generate(name: string, wrapperFn?: WrapperFn): string;
    _evalFExpr(expr: FExpr, wrapperFn?: WrapperFn): string;
    toString(): string;
    repr(): string;
    _renderRules(fn: (x: FExpr) => string): string;
    _toStringFExpr(expr: FExpr): string;
    _reprFExpr(expr: FExpr): string;
}
export {};
